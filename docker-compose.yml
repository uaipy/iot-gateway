services:
  # Serviço do banco de dados PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-sensor_data}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço da API FastAPI
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_gateway
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      # Variáveis de ambiente para a aplicação
      DB_NAME: ${DB_NAME:-sensor_data}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: db
      DB_PORT: 5432
      CLOUD_API_URL: ${CLOUD_API_URL}
      SEND_INTERVAL_SECONDS: ${SEND_INTERVAL_SECONDS:-300}
    depends_on:
      db:
        condition: service_healthy

  grafana:
    image: docker.io/grafana/grafana-oss:12.1.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: docker.io/prom/prometheus:v3.5.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.retention.time=7d
      - --storage.tsdb.retention.size=2GB
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki

volumes:
  postgres_data:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local